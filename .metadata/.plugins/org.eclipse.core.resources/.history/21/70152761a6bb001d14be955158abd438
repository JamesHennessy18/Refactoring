/*
 * 
 * This is a Random Access Employee record definition
 * 
 * */

import java.io.RandomAccessFile;
import java.io.IOException;

public class RandomAccessEmployeeRecord1 
{  
    public static final int SIZE = 175; // Size of each RandomAccessEmployeeRecord object

   // Create empty record
   public RandomAccessEmployeeRecord1()
   {
      this(0, "","","",'\0', "", 0.0, false);
   } // end RandomAccessEmployeeRecord
   public RandomAccessEmployeeRecord1(int employeeId, String pps, String surname, String firstName, char gender, String department, double salary, boolean fullTime) {
       this.employeeId = employeeId;
       this.pps = pps;
       this.surname = surname;
       this.firstName = firstName;
       this.gender = gender;
       this.department = department;
       this.salary = salary;
       this.fullTime = fullTime;
   }

   public int getEmployeeId() {
       return employeeId;
   }

   public void setEmployeeId(int employeeId) {
       this.employeeId = employeeId;
   }

   public String getPps() {
       return pps;
   }

   public void setPps(String pps) {
       this.pps = pps;
   }

   public String getSurname() {
       return surname;
   }

   public void setSurname(String surname) {
       this.surname = surname;
   }

   public String getFirstName() {
       return firstName;
   }

   public void setFirstName(String firstName) {
       this.firstName = firstName;
   }

   public char getGender() {
       return gender;
   }

   public void setGender(char gender) {
       this.gender = gender;
   }

   public String getDepartment() {
       return department;
   }

   public void setDepartment(String department) {
       this.department = department;
   }

   public double getSalary() {
       return salary;
   }

   public void setSalary(double salary) {
       this.salary = salary;
   }

   public boolean isFullTime() {
       return fullTime;
   }

   public void setFullTime(boolean fullTime) {
       this.fullTime = fullTime;
   }
   // Initialize record with details
   public RandomAccessEmployeeRecord( int employeeId, String pps, String surname, String firstName, char gender, 
		   String department, double salary, boolean fullTime)
   {
      super(employeeId, pps, surname, firstName, gender, department, salary, fullTime);
   } // end RandomAccessEmployeeRecord

   // Read a record from specified RandomAccessFile
   public void read( RandomAccessFile file ) throws IOException
   {
	   	setEmployeeId(file.readInt());
		setPps(readName(file));
		setSurname(readName(file));
		setFirstName(readName(file));
		setGender(file.readChar());
		setDepartment(readName(file));
		setSalary(file.readDouble());
		setFullTime(file.readBoolean());
   } // end read

   // Ensure that string is correct length
   private String readName( RandomAccessFile file ) throws IOException
   {
      char name[] = new char[ 20 ], temp;

      for ( int count = 0; count < name.length; count++ )
      {
         temp = file.readChar();
         name[ count ] = temp;
      } // end for     
      
      return new String( name ).replace( '\0', ' ' );
   } // end readName

   // Write a record to specified RandomAccessFile
   public void write( RandomAccessFile file ) throws IOException
   {
      file.writeInt( getEmployeeId() );
      writeName(file, getPps().toUpperCase());
      writeName( file, getSurname().toUpperCase() );
      writeName( file, getFirstName().toUpperCase() );
      file.writeChar(getGender());
      writeName(file,getDepartment());
      file.writeDouble( getSalary() );
      file.writeBoolean(getFullTime());
   } // end write

   // Ensure that string is correct length
   private void writeName( RandomAccessFile file, String name )
      throws IOException
   {
      StringBuffer buffer = null;

      if ( name != null ) 
         buffer = new StringBuffer( name );
      else 
         buffer = new StringBuffer( 20 );

      buffer.setLength( 20 );
      file.writeChars( buffer.toString() );
   } // end writeName
} // end class RandomAccessEmployeeRecord